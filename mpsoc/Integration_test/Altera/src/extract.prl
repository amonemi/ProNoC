#!/usr/bin/perl -w
use strict;
use warnings;

use Cwd qw(getcwd);
use IPC::Run qw(run timeout);

# Regular expression to match hardware utilization results like:
#   2,460 / 36,100 ( 7 % )
#   5808 , 2939904 ( < 1 % )
my $result_reg  = '[[:space:]]*[0-9,]+[[:space:]]*[,/][[:space:]]*[0-9,]+[[:space:]]*'
                . '\([[:space:]]*(<\s*)?[0-9]+[[:space:]]*%[[:space:]]*\)[[:space:]]*;';

# Hash of report labels and their corresponding regex patterns
my %HWs = (
    'Logic utilization'               => ';[[:space:]]*Logic utilization[[:space:]]*;' . $result_reg,
    'Combinational ALUTs'            => ';[[:space:]]*Combinational ALUTs[[:space:]]*;' . $result_reg,
    'Memory ALUTs'                   => ';[[:space:]]*Memory ALUTs[[:space:]]*;' . $result_reg,
    'Dedicated logic registers'      => ';[[:space:]]*Dedicated logic registers[[:space:]]*;' . $result_reg,
    'Total block memory bits'        => ';[[:space:]]*Total block memory bits[[:space:]]*;' . $result_reg,
    'ALMs: partially or completely used' => ';[[:space:]]*ALMs:[[:space:]]*partially or completely used[[:space:]]*;' . $result_reg,
    'M9K blocks'                     => ';[[:space:]]*M9K blocks[[:space:]]*;' . $result_reg,
);

# Result containers
my %freq;
my %results;
my $csv = "";

sub extract_results {
    my ($dir, $parent) = @_;
    chdir $dir or die "Cannot change to directory $dir: $!";

    # -----------------------
    # Extract Fmax frequency
    # -----------------------
    my ($in, $out, $err);
    $in = 'grep -R "; clk        ;      ;$" | sort';
    run ['bash'], \$in, \$out, \$err, timeout(10) or die "Error running Fmax grep: $?";

    for my $line (split "\n", $out) {
        my ($file) = split '/', $line;
        my $name = "${parent}_$file";

        my @parts = split ':', $line;
        my @fields = split ';', $parts[1];
        my $mhz = $fields[1];
        $mhz =~ s/MHz//;

        $freq{$name} = $mhz if !defined($freq{$name}) || $mhz < $freq{$name};
    }

    # -----------------------
    # Extract HW usage stats
    # -----------------------
    for my $metric (sort keys %HWs) {
        my $regex = $HWs{$metric};
        my $grep_cmd = "grep -RE '$regex' | sort";

        $out = undef;
        run ['bash'], \$grep_cmd, \$out, \$err, timeout(10) or die "Error running grep for $metric: $?";

        for my $line (split "\n", $out) {
            next unless $line =~ /\.fit\.rpt/;

            my ($file) = split '/', $line;
            my $name = "${parent}_$file";

            my @fields = split(/\; /, $line);
            my $value = $fields[2];
            $value =~ s/[;,]//g;

            my @numbers = split /[\/,]/, $value;
            $results{$metric}{$name} = join(',', @numbers);
        }
    }
}

# Main execution
extract_results($ARGV[0], $ARGV[1]);

# Print frequency results
$csv .= "Max frequency |";
for my $p (sort keys %freq) {
    $csv .= "$freq{$p},  $freq{$p} MHz\n";
}

# Print hardware utilization results
for my $metric (sort keys %results) {
    $csv .= "\n$metric |";
    for my $design (sort keys %{ $results{$metric} }) {
        $csv .= "  $results{$metric}{$design}\n";
    }
}

#grep -RE "Warning[[:space:]]*\("




# Output
print $csv;




